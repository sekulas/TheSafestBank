// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SafestBankServer.Infrastructure.EF.Contexts;

#nullable disable

namespace SafestBankServer.Infrastructure.Migrations
{
    [DbContext(typeof(SafestBankDbContext))]
    [Migration("20240108201502_IsClientBlocked")]
    partial class IsClientBlocked
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<int[]>("Mask")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<byte[]>("PartialPasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("PasswordStatus")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("PartialPasswords");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccb214f1-901f-4ff8-adb0-3fa7eb0d0231"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 1, 2, 8 },
                            PartialPasswordHash = new byte[] { 184, 33, 55, 53 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 60, 165, 183, 22 }
                        },
                        new
                        {
                            Id = new Guid("d0343e0d-a240-4120-be8b-a0dc0c3ebdae"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 3, 7, 8 },
                            PartialPasswordHash = new byte[] { 20, 254, 194, 156 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 134, 0, 175, 46 }
                        },
                        new
                        {
                            Id = new Guid("d69c3192-31ac-4f84-a05d-24c42ca51ab4"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 3, 9, 10 },
                            PartialPasswordHash = new byte[] { 140, 219, 144, 197 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 18, 107, 199, 131 }
                        },
                        new
                        {
                            Id = new Guid("95579ecb-11be-48a0-9f78-f1d479913220"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 4, 9, 10 },
                            PartialPasswordHash = new byte[] { 163, 146, 34, 144 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 36, 60, 103, 13 }
                        },
                        new
                        {
                            Id = new Guid("98c92922-fa57-4328-9f4d-6cf7e3977f41"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 2, 5, 9 },
                            PartialPasswordHash = new byte[] { 241, 182, 27, 66 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 248, 118, 10, 250 }
                        },
                        new
                        {
                            Id = new Guid("836f884a-c012-4356-9111-f4c9e347da9d"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 0, 5, 6 },
                            PartialPasswordHash = new byte[] { 96, 150, 215, 51 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 132, 84, 112, 140 }
                        },
                        new
                        {
                            Id = new Guid("5801788c-0123-4bc9-a0b8-efdbad56a3f9"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 1, 5, 6 },
                            PartialPasswordHash = new byte[] { 136, 9, 175, 176 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 203, 238, 60, 215 }
                        },
                        new
                        {
                            Id = new Guid("f4433381-3291-4e2b-b0e0-d81e8152fab4"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 0, 3, 6 },
                            PartialPasswordHash = new byte[] { 130, 225, 197, 250 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 190, 13, 123, 127 }
                        },
                        new
                        {
                            Id = new Guid("c591385b-171a-4981-8de5-c48fb21822e7"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 2, 9, 10 },
                            PartialPasswordHash = new byte[] { 74, 38, 187, 214 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 222, 24, 163, 41 }
                        },
                        new
                        {
                            Id = new Guid("52ac063f-c6b1-4609-9270-2e6f0005ea06"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            Mask = new[] { 0, 4, 9 },
                            PartialPasswordHash = new byte[] { 225, 42, 235, 156 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 86, 52, 103, 198 }
                        },
                        new
                        {
                            Id = new Guid("96e5a982-1c49-4a99-856a-02bdd4d920f8"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 5, 8, 10 },
                            PartialPasswordHash = new byte[] { 174, 82, 68, 17 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 229, 45, 165, 78 }
                        },
                        new
                        {
                            Id = new Guid("ef206ac8-7752-4e02-a86f-31c74588de95"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 3, 8, 10 },
                            PartialPasswordHash = new byte[] { 90, 239, 126, 149 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 146, 176, 13, 163 }
                        },
                        new
                        {
                            Id = new Guid("99bea296-a6c4-4df7-81f5-4c4c96f695cd"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 5, 7, 10 },
                            PartialPasswordHash = new byte[] { 1, 52, 49, 62 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 186, 104, 10, 218 }
                        },
                        new
                        {
                            Id = new Guid("64f91cb2-0fab-4e75-a577-87786ea93a58"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 1, 7, 8 },
                            PartialPasswordHash = new byte[] { 254, 45, 10, 99 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 230, 70, 187, 150 }
                        },
                        new
                        {
                            Id = new Guid("46fef6d7-5e79-4776-b57d-2e6eb1eebc7d"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 4, 7, 10 },
                            PartialPasswordHash = new byte[] { 206, 220, 102, 222 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 1, 245, 227, 51 }
                        },
                        new
                        {
                            Id = new Guid("b3a60b18-3930-482b-8316-bb0529eade2e"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 1, 5, 8 },
                            PartialPasswordHash = new byte[] { 69, 164, 20, 51 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 202, 123, 241, 95 }
                        },
                        new
                        {
                            Id = new Guid("db858bdb-3389-4ecc-aaae-907ebfcc1563"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 0, 2, 7 },
                            PartialPasswordHash = new byte[] { 210, 251, 62, 90 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 151, 186, 153, 195 }
                        },
                        new
                        {
                            Id = new Guid("9dd855bb-af01-42db-9e08-1958499bb767"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 1, 5, 10 },
                            PartialPasswordHash = new byte[] { 247, 129, 49, 108 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 117, 203, 35, 24 }
                        },
                        new
                        {
                            Id = new Guid("36db3fad-3882-4b69-acb0-e31048732dd4"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 0, 5, 8 },
                            PartialPasswordHash = new byte[] { 21, 205, 69, 95 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 162, 88, 156, 247 }
                        },
                        new
                        {
                            Id = new Guid("e96cc834-60d3-4f83-8bf1-aae85299b320"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            Mask = new[] { 5, 6, 9 },
                            PartialPasswordHash = new byte[] { 205, 254, 92, 227 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 63, 75, 49, 112 }
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdentityCardId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BankClients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            AccountNumber = "12345678901234567890123456",
                            AddressId = new Guid("35b93122-98a1-4acf-963d-d370dc4bde4d"),
                            Balance = 1000.0m,
                            ClientNumber = "1",
                            Email = "sekula.sebastian.kontakt@gmail.com",
                            IdentityCardId = new Guid("4a8c677f-8cc0-4384-aa3a-d45b1c063e7a"),
                            IsBlocked = false,
                            LoginAttempts = 0,
                            Name = "Sebastian",
                            PESEL = "12345678901",
                            Surname = "Sekula"
                        },
                        new
                        {
                            Id = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            AccountNumber = "22345678901234567890123456",
                            AddressId = new Guid("314fbce9-222d-43ea-9db1-16907d943388"),
                            Balance = 1000.0m,
                            ClientNumber = "2",
                            Email = "bob@gmail.com",
                            IdentityCardId = new Guid("2d7b08ce-9254-49d7-9301-4cdcfa1d1e3b"),
                            IsBlocked = false,
                            LoginAttempts = 0,
                            Name = "Bob",
                            PESEL = "22345678901",
                            Surname = "Bobowski"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35b93122-98a1-4acf-963d-d370dc4bde4d"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        },
                        new
                        {
                            Id = new Guid("314fbce9-222d-43ea-9db1-16907d943388"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryOfIssue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("IdentityCards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a8c677f-8cc0-4384-aa3a-d45b1c063e7a"),
                            BankClientId = new Guid("be3d7aca-3504-42e3-a30d-8acd9d0e14ea"),
                            CountryOfIssue = "Polska",
                            Number = "12121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        },
                        new
                        {
                            Id = new Guid("2d7b08ce-9254-49d7-9301-4cdcfa1d1e3b"),
                            BankClientId = new Guid("30011b44-a32a-48fd-967d-f8e9ecf4438f"),
                            CountryOfIssue = "Polska",
                            Number = "22121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RecipientSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("ClientTransactions");
                });

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("PartialPasswords")
                        .HasForeignKey("BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("Address")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.Address", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("IdentityCard")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.IdentityCard", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BankClientId");
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("IdentityCard")
                        .IsRequired();

                    b.Navigation("PartialPasswords");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
