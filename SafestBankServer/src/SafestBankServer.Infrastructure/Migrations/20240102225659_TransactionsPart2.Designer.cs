// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SafestBankServer.Infrastructure.EF.Contexts;

#nullable disable

namespace SafestBankServer.Infrastructure.Migrations
{
    [DbContext(typeof(SafestBankDbContext))]
    [Migration("20240102225659_TransactionsPart2")]
    partial class TransactionsPart2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<int[]>("Mask")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<byte[]>("PartialPasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("PasswordStatus")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("PartialPasswords");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79ad984e-f4f3-45d9-acd7-d2ea5af6cf22"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 4, 6, 10 },
                            PartialPasswordHash = new byte[] { 112, 185, 247, 67 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 169, 181, 1, 21 }
                        },
                        new
                        {
                            Id = new Guid("29c74bc3-5965-446c-9925-8810eeb7ff79"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 1, 5, 6 },
                            PartialPasswordHash = new byte[] { 22, 18, 145, 128 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 37, 173, 223, 142 }
                        },
                        new
                        {
                            Id = new Guid("e7d281c3-ea9a-46bf-8373-273702a504ba"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 2, 5, 8 },
                            PartialPasswordHash = new byte[] { 176, 192, 9, 19 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 233, 184, 68, 92 }
                        },
                        new
                        {
                            Id = new Guid("15a5e670-4f6c-4174-abaf-b395b744d233"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 2, 5, 9 },
                            PartialPasswordHash = new byte[] { 65, 109, 53, 84 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 2, 32, 33, 104 }
                        },
                        new
                        {
                            Id = new Guid("b835fb63-04a1-496f-84e3-7ca15823e38c"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 5, 9, 10 },
                            PartialPasswordHash = new byte[] { 108, 77, 191, 18 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 76, 15, 79, 100 }
                        },
                        new
                        {
                            Id = new Guid("e7d119e2-8f73-4475-be0d-043b85be977c"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 1, 2, 5 },
                            PartialPasswordHash = new byte[] { 95, 245, 60, 229 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 72, 197, 6, 37 }
                        },
                        new
                        {
                            Id = new Guid("5317307f-f31a-4ea1-9a6e-9b847f8eb19f"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 1, 2, 7 },
                            PartialPasswordHash = new byte[] { 232, 32, 78, 37 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 133, 101, 195, 121 }
                        },
                        new
                        {
                            Id = new Guid("07b7067a-49c0-4cbd-bf95-18384e09d5b5"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 0, 2, 4 },
                            PartialPasswordHash = new byte[] { 213, 94, 241, 66 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 154, 188, 76, 27 }
                        },
                        new
                        {
                            Id = new Guid("d8af05aa-f489-4cdf-bdb5-1f7904d11733"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 2, 4, 7 },
                            PartialPasswordHash = new byte[] { 48, 72, 108, 53 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 61, 141, 216, 50 }
                        },
                        new
                        {
                            Id = new Guid("8f7404b6-ecbe-44dd-9dcb-9a3880905d2d"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            Mask = new[] { 3, 6, 8 },
                            PartialPasswordHash = new byte[] { 91, 77, 74, 230 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 237, 75, 161, 154 }
                        },
                        new
                        {
                            Id = new Guid("f6adb44a-d4af-488a-a112-6ca3e70ba642"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 0, 3, 7 },
                            PartialPasswordHash = new byte[] { 14, 249, 168, 204 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 79, 54, 134, 219 }
                        },
                        new
                        {
                            Id = new Guid("2cc4f663-51c6-4fc3-83eb-007f08a2b2e6"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 3, 8, 9 },
                            PartialPasswordHash = new byte[] { 138, 23, 174, 134 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 84, 79, 48, 92 }
                        },
                        new
                        {
                            Id = new Guid("b3362ca4-274c-465b-bc96-1ec8ec38d4c8"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 5, 7, 8 },
                            PartialPasswordHash = new byte[] { 175, 31, 198, 148 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 74, 166, 78, 195 }
                        },
                        new
                        {
                            Id = new Guid("d17d746f-b5dd-431d-87b4-9359a090064c"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 0, 8, 9 },
                            PartialPasswordHash = new byte[] { 202, 51, 108, 194 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 20, 31, 66, 210 }
                        },
                        new
                        {
                            Id = new Guid("406d649f-2319-4986-852a-1cc5715ce06d"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 4, 5, 6 },
                            PartialPasswordHash = new byte[] { 209, 55, 167, 10 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 149, 71, 80, 171 }
                        },
                        new
                        {
                            Id = new Guid("a6217b73-0a2a-4ffa-953b-86999129e7ba"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 4, 5, 7 },
                            PartialPasswordHash = new byte[] { 93, 107, 43, 21 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 58, 7, 131, 129 }
                        },
                        new
                        {
                            Id = new Guid("f6fa1e15-8ca5-48c8-9e36-b3cbdd12ee45"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 4, 5, 9 },
                            PartialPasswordHash = new byte[] { 25, 88, 126, 86 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 11, 209, 81, 255 }
                        },
                        new
                        {
                            Id = new Guid("354659d8-f210-44ee-b375-b975e8978496"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 0, 1, 10 },
                            PartialPasswordHash = new byte[] { 140, 38, 228, 83 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 119, 53, 182, 221 }
                        },
                        new
                        {
                            Id = new Guid("d059924c-b531-4d1a-b82d-904ac97e01ea"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 1, 2, 4 },
                            PartialPasswordHash = new byte[] { 123, 247, 10, 99 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 231, 0, 41, 68 }
                        },
                        new
                        {
                            Id = new Guid("54680887-a3b1-46ee-a3aa-dd0e2e6fd6fe"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            Mask = new[] { 2, 6, 9 },
                            PartialPasswordHash = new byte[] { 226, 41, 101, 169 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 196, 109, 140, 9 }
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdentityCardId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BankClients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            AccountNumber = "12345678901234567890123456",
                            AddressId = new Guid("36905ecd-7515-46e3-b28d-2d6ede1b51b6"),
                            Balance = 1000.0m,
                            ClientNumber = "1",
                            Email = "sekula.sebastian.kontakt@gmail.com",
                            IdentityCardId = new Guid("90d5f5b2-4f6d-4d75-b609-de55d3a41c7e"),
                            Name = "Sebastian",
                            PESEL = "12345678901",
                            Surname = "Sekula"
                        },
                        new
                        {
                            Id = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            AccountNumber = "22345678901234567890123456",
                            AddressId = new Guid("26dcc92f-f0b3-4e5f-868d-ac968fd98548"),
                            Balance = 1000.0m,
                            ClientNumber = "2",
                            Email = "bob@gmail.com",
                            IdentityCardId = new Guid("46b7afe8-29f1-4d30-949e-a674131bf1ce"),
                            Name = "Bob",
                            PESEL = "22345678901",
                            Surname = "Bobowski"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36905ecd-7515-46e3-b28d-2d6ede1b51b6"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        },
                        new
                        {
                            Id = new Guid("26dcc92f-f0b3-4e5f-868d-ac968fd98548"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryOfIssue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("IdentityCards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90d5f5b2-4f6d-4d75-b609-de55d3a41c7e"),
                            BankClientId = new Guid("789b48f2-b9d4-4bf0-990e-ca32b54fdbc2"),
                            CountryOfIssue = "Polska",
                            Number = "12121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        },
                        new
                        {
                            Id = new Guid("46b7afe8-29f1-4d30-949e-a674131bf1ce"),
                            BankClientId = new Guid("59126f13-5104-4814-a296-8534024c624e"),
                            CountryOfIssue = "Polska",
                            Number = "22121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RecipientSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("ClientTransactions");
                });

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("PartialPasswords")
                        .HasForeignKey("BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("Address")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.Address", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("IdentityCard")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.IdentityCard", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BankClientId");
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("IdentityCard")
                        .IsRequired();

                    b.Navigation("PartialPasswords");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
