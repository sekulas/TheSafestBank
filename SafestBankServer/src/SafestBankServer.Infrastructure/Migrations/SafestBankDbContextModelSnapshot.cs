// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SafestBankServer.Infrastructure.EF.Contexts;

#nullable disable

namespace SafestBankServer.Infrastructure.Migrations
{
    [DbContext(typeof(SafestBankDbContext))]
    partial class SafestBankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<int[]>("Mask")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<byte[]>("PartialPasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("PasswordStatus")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("PartialPasswords");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c8b927b-a021-44b6-ba21-a12e3e2bea54"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 2, 3, 9 },
                            PartialPasswordHash = new byte[] { 199, 220, 254, 7 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 148, 65, 115, 140 }
                        },
                        new
                        {
                            Id = new Guid("23bafdc0-cb2c-4204-ad68-de1c140df5ed"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 3, 5, 7 },
                            PartialPasswordHash = new byte[] { 253, 254, 131, 242 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 125, 93, 80, 128 }
                        },
                        new
                        {
                            Id = new Guid("bd99cc93-3e15-4914-9e72-e85ec5dad981"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 6, 8, 9 },
                            PartialPasswordHash = new byte[] { 202, 189, 178, 195 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 172, 240, 112, 242 }
                        },
                        new
                        {
                            Id = new Guid("9d10c826-c3e5-46a2-a28c-ded705bd3bc2"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 0, 2, 5 },
                            PartialPasswordHash = new byte[] { 110, 215, 98, 10 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 4, 111, 11, 128 }
                        },
                        new
                        {
                            Id = new Guid("dd372714-3ce9-4e02-aa1d-0cfafc347baf"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 2, 5, 10 },
                            PartialPasswordHash = new byte[] { 128, 177, 37, 211 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 244, 21, 180, 11 }
                        },
                        new
                        {
                            Id = new Guid("ca9013e9-a807-4634-a5a5-8373ae1df0cb"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 1, 4, 6 },
                            PartialPasswordHash = new byte[] { 127, 164, 71, 66 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 35, 218, 45, 86 }
                        },
                        new
                        {
                            Id = new Guid("3795727f-5deb-41c2-bf68-3d11ef81d61d"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 2, 6, 7 },
                            PartialPasswordHash = new byte[] { 156, 150, 214, 156 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 45, 186, 175, 107 }
                        },
                        new
                        {
                            Id = new Guid("76815ccd-1932-4e69-8474-40fc6856a7d7"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 2, 5, 9 },
                            PartialPasswordHash = new byte[] { 31, 135, 183, 240 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 244, 75, 255, 49 }
                        },
                        new
                        {
                            Id = new Guid("dc760491-4d45-4574-8006-da0e45953c1c"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 1, 4, 8 },
                            PartialPasswordHash = new byte[] { 89, 226, 165, 79 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 236, 82, 36, 140 }
                        },
                        new
                        {
                            Id = new Guid("8f4ee295-42db-4c94-b372-b05daf940c71"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            Mask = new[] { 0, 1, 10 },
                            PartialPasswordHash = new byte[] { 81, 152, 122, 116 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 19, 156, 86, 160 }
                        },
                        new
                        {
                            Id = new Guid("f59118a8-335d-423c-bc06-72f6fd8afcf0"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 3, 4, 9 },
                            PartialPasswordHash = new byte[] { 113, 134, 205, 121 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 26, 152, 245, 255 }
                        },
                        new
                        {
                            Id = new Guid("e9c788f4-ea48-4e22-8366-a1e869eb2d2c"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 1, 4, 5 },
                            PartialPasswordHash = new byte[] { 155, 33, 64, 112 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 179, 82, 28, 99 }
                        },
                        new
                        {
                            Id = new Guid("f76fe2ac-c117-405c-9e75-125d50442975"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 3, 6, 8 },
                            PartialPasswordHash = new byte[] { 180, 104, 168, 241 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 117, 46, 225, 38 }
                        },
                        new
                        {
                            Id = new Guid("418858d9-fcbb-4b80-b8d3-e5d55e4faed9"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 1, 9, 10 },
                            PartialPasswordHash = new byte[] { 72, 235, 152, 97 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 203, 172, 161, 82 }
                        },
                        new
                        {
                            Id = new Guid("1c0fdc5f-4d83-47fc-a77c-b088703236e3"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 5, 6, 7 },
                            PartialPasswordHash = new byte[] { 138, 211, 92, 189 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 19, 177, 188, 4 }
                        },
                        new
                        {
                            Id = new Guid("2637cf5b-f60b-49e7-ad20-7c9fab8cbabe"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 1, 2, 10 },
                            PartialPasswordHash = new byte[] { 62, 127, 32, 166 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 255, 253, 20, 93 }
                        },
                        new
                        {
                            Id = new Guid("b187374b-6418-467b-a126-849151854652"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 0, 2, 9 },
                            PartialPasswordHash = new byte[] { 100, 31, 91, 51 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 88, 58, 111, 101 }
                        },
                        new
                        {
                            Id = new Guid("4e933509-5e15-4393-ae6c-d81d662c2234"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 2, 5, 7 },
                            PartialPasswordHash = new byte[] { 162, 201, 205, 248 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 126, 88, 123, 50 }
                        },
                        new
                        {
                            Id = new Guid("b98b0682-ecf4-4bb6-9443-d04097f7dc38"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 3, 5, 8 },
                            PartialPasswordHash = new byte[] { 133, 50, 49, 96 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 224, 130, 83, 225 }
                        },
                        new
                        {
                            Id = new Guid("504fbfb6-169b-44fd-b62c-8d127d52b110"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            Mask = new[] { 2, 8, 10 },
                            PartialPasswordHash = new byte[] { 121, 97, 231, 92 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 191, 8, 107, 47 }
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdentityCardId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastPasswordResetRequestTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PasswordResetAttempts")
                        .HasColumnType("integer");

                    b.Property<byte[]>("PasswordResetTokenHash")
                        .HasColumnType("bytea");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BankClients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            AccountNumber = "12345678901234567890123456",
                            AddressId = new Guid("ef1b20c9-8707-4c3c-b81e-a189991839c3"),
                            Balance = 1000.0m,
                            ClientNumber = "1",
                            Email = "sekula.sebastian.kontakt@gmail.com",
                            IdentityCardId = new Guid("88706890-918e-4a44-bf8f-e3e13a0baa9e"),
                            IsBlocked = false,
                            LoginAttempts = 0,
                            Name = "Sebastian",
                            PESEL = "12345678901",
                            PasswordResetAttempts = 0,
                            Surname = "Sekula"
                        },
                        new
                        {
                            Id = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            AccountNumber = "22345678901234567890123456",
                            AddressId = new Guid("9c2389a5-0311-4358-9c0e-35e6139d1fff"),
                            Balance = 1000.0m,
                            ClientNumber = "2",
                            Email = "bob@gmail.com",
                            IdentityCardId = new Guid("49062219-64f7-4512-971d-36f3371d6a41"),
                            IsBlocked = false,
                            LoginAttempts = 0,
                            Name = "Bob",
                            PESEL = "22345678901",
                            PasswordResetAttempts = 0,
                            Surname = "Bobowski"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef1b20c9-8707-4c3c-b81e-a189991839c3"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        },
                        new
                        {
                            Id = new Guid("9c2389a5-0311-4358-9c0e-35e6139d1fff"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryOfIssue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("IdentityCards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88706890-918e-4a44-bf8f-e3e13a0baa9e"),
                            BankClientId = new Guid("1d9dc8be-afc3-42b1-988f-344b1d4c80cc"),
                            CountryOfIssue = "Polska",
                            Number = "12121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        },
                        new
                        {
                            Id = new Guid("49062219-64f7-4512-971d-36f3371d6a41"),
                            BankClientId = new Guid("ce00448a-7717-4cdd-9d38-75c7e7d9a677"),
                            CountryOfIssue = "Polska",
                            Number = "22121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RecipientSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("ClientTransactions");
                });

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("PartialPasswords")
                        .HasForeignKey("BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("Address")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.Address", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("IdentityCard")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.IdentityCard", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BankClientId");
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("IdentityCard")
                        .IsRequired();

                    b.Navigation("PartialPasswords");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
