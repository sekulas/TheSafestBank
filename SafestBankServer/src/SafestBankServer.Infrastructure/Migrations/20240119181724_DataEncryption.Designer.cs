// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SafestBankServer.Infrastructure.EF.Contexts;

#nullable disable

namespace SafestBankServer.Infrastructure.Migrations
{
    [DbContext(typeof(SafestBankDbContext))]
    [Migration("20240119181724_DataEncryption")]
    partial class DataEncryption
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<int[]>("Mask")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<byte[]>("PartialPasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("PasswordStatus")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("PartialPasswords");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc1133d1-c67d-43df-86a5-63205d9252ef"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 1, 6, 9 },
                            PartialPasswordHash = new byte[] { 143, 153, 164, 135 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 113, 19, 59, 45 }
                        },
                        new
                        {
                            Id = new Guid("a6e4b9bd-7e69-4342-a056-4b84630eb73e"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 7, 9, 10 },
                            PartialPasswordHash = new byte[] { 172, 50, 12, 230 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 179, 45, 9, 191 }
                        },
                        new
                        {
                            Id = new Guid("1a9bf9a2-257e-44d8-babd-9d5824fdfcd1"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 2, 8, 9 },
                            PartialPasswordHash = new byte[] { 238, 28, 232, 224 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 13, 110, 219, 177 }
                        },
                        new
                        {
                            Id = new Guid("40dd2f4c-3603-4a12-b6d9-fcd20cdf50db"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 2, 4, 8 },
                            PartialPasswordHash = new byte[] { 143, 58, 171, 39 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 15, 184, 138, 175 }
                        },
                        new
                        {
                            Id = new Guid("40ddf589-0d93-42f8-9d92-66c24598d2a8"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 1, 6, 8 },
                            PartialPasswordHash = new byte[] { 238, 246, 182, 164 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 222, 98, 70, 59 }
                        },
                        new
                        {
                            Id = new Guid("617a4ae0-202a-4079-b863-200e98b028bb"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 0, 1, 4 },
                            PartialPasswordHash = new byte[] { 95, 206, 178, 92 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 156, 99, 54, 183 }
                        },
                        new
                        {
                            Id = new Guid("76b53e3d-99e9-42a5-81e6-4d6a240fc2b3"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 1, 6, 7 },
                            PartialPasswordHash = new byte[] { 13, 122, 142, 164 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 212, 31, 55, 41 }
                        },
                        new
                        {
                            Id = new Guid("5896248f-375c-4e81-a22a-5c49a82b13a7"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 0, 4, 8 },
                            PartialPasswordHash = new byte[] { 246, 124, 41, 24 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 182, 177, 252, 177 }
                        },
                        new
                        {
                            Id = new Guid("9e7dc4f7-52e5-470c-a3ca-932b529cbc44"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 2, 3, 5 },
                            PartialPasswordHash = new byte[] { 117, 2, 52, 40 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 122, 130, 199, 149 }
                        },
                        new
                        {
                            Id = new Guid("e327aedf-f6b1-478e-a7b2-25a373795137"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            Mask = new[] { 2, 8, 10 },
                            PartialPasswordHash = new byte[] { 155, 186, 124, 189 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 178, 35, 154, 176 }
                        },
                        new
                        {
                            Id = new Guid("a294efb0-c3df-4db1-a312-73a59627f921"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 2, 6, 7 },
                            PartialPasswordHash = new byte[] { 110, 63, 184, 242 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 189, 8, 252, 80 }
                        },
                        new
                        {
                            Id = new Guid("fbe0ebb1-c178-4c23-8ec0-0d6880474160"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 1, 3, 10 },
                            PartialPasswordHash = new byte[] { 188, 135, 137, 202 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 110, 240, 51, 182 }
                        },
                        new
                        {
                            Id = new Guid("2667f306-dac3-4662-a744-192d42b39226"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 3, 5, 8 },
                            PartialPasswordHash = new byte[] { 66, 29, 59, 77 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 130, 33, 216, 183 }
                        },
                        new
                        {
                            Id = new Guid("72176824-25ea-43bd-b50a-7b16224d2803"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 0, 8, 10 },
                            PartialPasswordHash = new byte[] { 69, 63, 167, 181 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 69, 207, 33, 121 }
                        },
                        new
                        {
                            Id = new Guid("9a21263e-7630-4878-9c1b-fe3dd6626a85"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 0, 4, 6 },
                            PartialPasswordHash = new byte[] { 104, 137, 76, 235 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 197, 20, 169, 250 }
                        },
                        new
                        {
                            Id = new Guid("c24a04d3-4f78-430f-a7ea-d15c8055d053"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 2, 5, 9 },
                            PartialPasswordHash = new byte[] { 111, 116, 97, 32 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 80, 138, 35, 13 }
                        },
                        new
                        {
                            Id = new Guid("c1f863fb-8d4a-4188-b074-121138a327db"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 5, 9, 10 },
                            PartialPasswordHash = new byte[] { 113, 89, 218, 255 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 140, 192, 189, 16 }
                        },
                        new
                        {
                            Id = new Guid("613621a7-5acb-468c-a185-252e91e8e8b2"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 1, 4, 8 },
                            PartialPasswordHash = new byte[] { 192, 51, 142, 179 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 205, 243, 244, 151 }
                        },
                        new
                        {
                            Id = new Guid("5e51a4ba-6ee4-494f-a901-e8b1e0d20a9f"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 3, 6, 10 },
                            PartialPasswordHash = new byte[] { 166, 22, 63, 80 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 247, 242, 206, 146 }
                        },
                        new
                        {
                            Id = new Guid("36739fe0-b94b-4344-bdec-3c7f9d594ea6"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            Mask = new[] { 0, 1, 3 },
                            PartialPasswordHash = new byte[] { 113, 238, 254, 171 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 81, 237, 246, 40 }
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdentityCardId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastPasswordResetRequestTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PasswordResetAttempts")
                        .HasColumnType("integer");

                    b.Property<byte[]>("PasswordResetTokenHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BankClients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            AccountNumber = "12345678901234567890123456",
                            AddressId = new Guid("b7cb35f1-4935-4d26-9b4b-7a04a5040b94"),
                            Balance = 1000.0m,
                            ClientNumber = "1",
                            Email = "sekula.sebastian.kontakt@gmail.com",
                            IdentityCardId = new Guid("19a8ebad-8068-4790-8b32-1926376f501d"),
                            IsBlocked = false,
                            LoginAttempts = 0,
                            Name = "Sebastian",
                            PESEL = "K853Z4w7o69/6Y73mnpfCQ==",
                            PasswordResetAttempts = 0,
                            Salt = new byte[] { 186, 108, 23, 186, 88, 155, 103, 98, 220, 198, 191, 19, 11, 175, 238, 18 },
                            Surname = "Sekula"
                        },
                        new
                        {
                            Id = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            AccountNumber = "22345678901234567890123456",
                            AddressId = new Guid("3e9ac3ba-1a83-4c7b-af99-4d2097f819f9"),
                            Balance = 1000.0m,
                            ClientNumber = "2",
                            Email = "bob@gmail.com",
                            IdentityCardId = new Guid("5bfe5536-9bad-4c17-a93f-41ed5634b686"),
                            IsBlocked = false,
                            LoginAttempts = 0,
                            Name = "Bob",
                            PESEL = "22345678901",
                            PasswordResetAttempts = 0,
                            Salt = new byte[] { 12, 237, 54, 244, 244, 65, 0, 214, 26, 173, 189, 152, 179, 205, 79, 141 },
                            Surname = "Bobowski"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7cb35f1-4935-4d26-9b4b-7a04a5040b94"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            City = "jT3F5GEixsCpu20+i9gmzQ==",
                            Country = "Poland",
                            HouseNumber = "ZwrSx4pJXIcl2qanqDP5GQ==",
                            Street = "85W+NikqhjYbbhnbCTBFew==",
                            ZipCode = "6ZrKRqcYV/8Sx5K5fwCFuQ=="
                        },
                        new
                        {
                            Id = new Guid("3e9ac3ba-1a83-4c7b-af99-4d2097f819f9"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryOfIssue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("IdentityCards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19a8ebad-8068-4790-8b32-1926376f501d"),
                            BankClientId = new Guid("b123b1f6-69a5-49ff-8e3d-8ed04496f2a6"),
                            CountryOfIssue = "Poland",
                            Number = "JZV3RjPobB0ufVDUeB3xyg==",
                            Serie = "aE0FnNYsy44lu5gQj7hNuQ==",
                            Type = "S1LOmNkwvEOuMB0G09ITag=="
                        },
                        new
                        {
                            Id = new Guid("5bfe5536-9bad-4c17-a93f-41ed5634b686"),
                            BankClientId = new Guid("42a3c4ae-74c3-4137-8d04-fc8f214d7b30"),
                            CountryOfIssue = "Polska",
                            Number = "22121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RecipientSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("ClientTransactions");
                });

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("PartialPasswords")
                        .HasForeignKey("BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("Address")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.Address", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("IdentityCard")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.IdentityCard", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BankClientId");
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("IdentityCard")
                        .IsRequired();

                    b.Navigation("PartialPasswords");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
