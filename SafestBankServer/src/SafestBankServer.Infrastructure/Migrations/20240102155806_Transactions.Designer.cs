// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SafestBankServer.Infrastructure.EF.Contexts;

#nullable disable

namespace SafestBankServer.Infrastructure.Migrations
{
    [DbContext(typeof(SafestBankDbContext))]
    [Migration("20240102155806_Transactions")]
    partial class Transactions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<int[]>("Mask")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<byte[]>("PartialPasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("PasswordStatus")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("PartialPasswords");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10a82069-be59-4dcd-b46d-d4e9498fe435"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 7, 8, 9 },
                            PartialPasswordHash = new byte[] { 135, 60, 132, 147 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 244, 161, 61, 25 }
                        },
                        new
                        {
                            Id = new Guid("e49b6c43-f479-4157-95af-01e9f3370ce2"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 0, 4, 7 },
                            PartialPasswordHash = new byte[] { 250, 28, 72, 187 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 95, 19, 203, 99 }
                        },
                        new
                        {
                            Id = new Guid("153a513f-e1fb-4ece-8970-77237a599000"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 2, 4, 10 },
                            PartialPasswordHash = new byte[] { 132, 139, 109, 171 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 228, 86, 8, 80 }
                        },
                        new
                        {
                            Id = new Guid("c0da7376-4781-42b6-9c85-d92568489b8a"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 5, 6, 10 },
                            PartialPasswordHash = new byte[] { 90, 21, 186, 70 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 171, 209, 101, 61 }
                        },
                        new
                        {
                            Id = new Guid("63fc53fd-03c9-41c3-9a4f-e1e18163929b"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 4, 5, 9 },
                            PartialPasswordHash = new byte[] { 175, 31, 21, 186 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 63, 113, 27, 208 }
                        },
                        new
                        {
                            Id = new Guid("a31ae437-d3d8-4b6e-8506-c04f74f67d92"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 1, 3, 4 },
                            PartialPasswordHash = new byte[] { 206, 21, 193, 42 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 71, 70, 80, 61 }
                        },
                        new
                        {
                            Id = new Guid("0b0629de-92f1-44a7-9e5a-0ef49ba13500"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 2, 5, 10 },
                            PartialPasswordHash = new byte[] { 226, 45, 250, 112 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 194, 5, 158, 192 }
                        },
                        new
                        {
                            Id = new Guid("2be2486d-f795-4239-a614-b36c358b4ed8"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 1, 7, 9 },
                            PartialPasswordHash = new byte[] { 159, 14, 244, 241 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 182, 24, 107, 161 }
                        },
                        new
                        {
                            Id = new Guid("637c6a10-3b0f-4916-ba20-0b2c9fbf23a3"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 3, 5, 9 },
                            PartialPasswordHash = new byte[] { 89, 21, 155, 151 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 121, 190, 7, 201 }
                        },
                        new
                        {
                            Id = new Guid("c37821f0-66f1-45a5-812e-18713da4f5a7"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            Mask = new[] { 1, 5, 10 },
                            PartialPasswordHash = new byte[] { 170, 58, 225, 34 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 4, 57, 126, 234 }
                        },
                        new
                        {
                            Id = new Guid("21bf0a36-9079-495b-bc85-48a9faa8193f"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 2, 4, 7 },
                            PartialPasswordHash = new byte[] { 228, 199, 199, 105 },
                            PasswordStatus = 2,
                            Salt = new byte[] { 222, 184, 217, 249 }
                        },
                        new
                        {
                            Id = new Guid("2eac6f41-b854-43b9-b999-5d3add68143a"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 3, 5, 10 },
                            PartialPasswordHash = new byte[] { 255, 10, 21, 79 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 113, 175, 108, 170 }
                        },
                        new
                        {
                            Id = new Guid("76342a6a-8626-484a-ade1-3dddfe1d2f8b"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 2, 7, 10 },
                            PartialPasswordHash = new byte[] { 187, 207, 56, 52 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 227, 39, 171, 13 }
                        },
                        new
                        {
                            Id = new Guid("63f49d44-b8fc-4951-9542-714f3db189ed"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 1, 5, 9 },
                            PartialPasswordHash = new byte[] { 18, 173, 248, 176 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 219, 193, 103, 8 }
                        },
                        new
                        {
                            Id = new Guid("26c6db5e-ea58-4e06-8c78-dfb3f3fe8a1f"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 3, 4, 8 },
                            PartialPasswordHash = new byte[] { 217, 138, 254, 28 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 147, 47, 3, 238 }
                        },
                        new
                        {
                            Id = new Guid("1b2b0c0f-8c7b-40e8-b2d1-22947c12a84e"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 0, 3, 6 },
                            PartialPasswordHash = new byte[] { 30, 0, 72, 53 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 145, 98, 72, 132 }
                        },
                        new
                        {
                            Id = new Guid("8b509a2d-2caf-40a5-871f-f37f06046963"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 2, 7, 9 },
                            PartialPasswordHash = new byte[] { 17, 115, 140, 96 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 207, 189, 179, 94 }
                        },
                        new
                        {
                            Id = new Guid("96abd29a-08c0-46c8-b7fa-0104a02111a6"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 0, 1, 9 },
                            PartialPasswordHash = new byte[] { 200, 183, 85, 199 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 213, 197, 89, 210 }
                        },
                        new
                        {
                            Id = new Guid("8f00684f-352f-4a65-927a-e027f3425063"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 3, 4, 10 },
                            PartialPasswordHash = new byte[] { 62, 244, 253, 59 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 235, 227, 79, 93 }
                        },
                        new
                        {
                            Id = new Guid("ea04a126-8896-455e-ad38-5de192aea2c6"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            Mask = new[] { 5, 6, 7 },
                            PartialPasswordHash = new byte[] { 90, 126, 120, 5 },
                            PasswordStatus = 1,
                            Salt = new byte[] { 21, 242, 41, 12 }
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdentityCardId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BankClients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            AccountNumber = "12345678901234567890123456",
                            AddressId = new Guid("616401ac-853f-4981-8c88-3a6476e1af05"),
                            Balance = 1000.0m,
                            ClientNumber = "1",
                            Email = "sekula.sebastian.kontakt@gmail.com",
                            IdentityCardId = new Guid("fa98850b-1502-4269-b8a1-ec6d3899f313"),
                            Name = "Sebastian",
                            PESEL = "12345678901",
                            Surname = "Sekula"
                        },
                        new
                        {
                            Id = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            AccountNumber = "22345678901234567890123456",
                            AddressId = new Guid("6b3f302b-ff04-4c63-acc3-62911a3595b3"),
                            Balance = 1000.0m,
                            ClientNumber = "2",
                            Email = "bob@gmail.com",
                            IdentityCardId = new Guid("459ef917-bd84-452e-8e26-b69f43e3cdbe"),
                            Name = "Bob",
                            PESEL = "22345678901",
                            Surname = "Bobowski"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("616401ac-853f-4981-8c88-3a6476e1af05"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        },
                        new
                        {
                            Id = new Guid("6b3f302b-ff04-4c63-acc3-62911a3595b3"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            City = "Warszawa",
                            Country = "Poland",
                            HouseNumber = "39",
                            Street = "Grójecka",
                            ZipCode = "12-102"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryOfIssue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId")
                        .IsUnique();

                    b.ToTable("IdentityCards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa98850b-1502-4269-b8a1-ec6d3899f313"),
                            BankClientId = new Guid("a2eb23c2-17b3-4157-bfe3-a667a3e6916d"),
                            CountryOfIssue = "Polska",
                            Number = "12121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        },
                        new
                        {
                            Id = new Guid("459ef917-bd84-452e-8e26-b69f43e3cdbe"),
                            BankClientId = new Guid("e2e1327d-f75a-4577-88f9-1f73744f4a85"),
                            CountryOfIssue = "Polska",
                            Number = "22121212",
                            Serie = "RXA",
                            Type = "DOWÓD POLSKI"
                        });
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("BankClientId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankClientId");

                    b.ToTable("ClientTransaction");
                });

            modelBuilder.Entity("SafestBankServer.Core.Auth.Passwords.PartialPassword", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("PartialPasswords")
                        .HasForeignKey("BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.Address", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("Address")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.Address", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.Data.IdentityCard", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithOne("IdentityCard")
                        .HasForeignKey("SafestBankServer.Core.Client.Data.IdentityCard", "BankClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafestBankServer.Core.Transaction.ClientTransaction", b =>
                {
                    b.HasOne("SafestBankServer.Core.Client.BankClient", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BankClientId");
                });

            modelBuilder.Entity("SafestBankServer.Core.Client.BankClient", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("IdentityCard")
                        .IsRequired();

                    b.Navigation("PartialPasswords");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
